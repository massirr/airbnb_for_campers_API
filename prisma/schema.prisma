generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model campingSpot_bookings {
  spotBookingID Int          @id @default(autoincrement())
  spotID        Int
  bookingID     Int
  booking       bookings     @relation(fields: [bookingID], references: [bookingID], onDelete: NoAction, onUpdate: NoAction, map: "fk_campingSpot_bookings_bookingID")
  campingSpot   campingSpots @relation(fields: [spotID], references: [spotID], onDelete: NoAction, onUpdate: NoAction, map: "fk_campingSpot_bookings_spotID")

  @@index([bookingID], map: "fk_campingSpot_bookings_bookingID_idx")
  @@index([spotID], map: "fk_campingSpot_bookings_spotID_idx")
}

model campingSpot_features {
  spotFeatureID Int          @id @default(autoincrement())
  spotID        Int
  featureID     Int
  campingSpot   campingSpots @relation(fields: [spotID], references: [spotID], onDelete: NoAction, onUpdate: NoAction, map: "fk_campingSpot_features_spotID")

  @@index([spotID], map: "fk_campingSpot_features_spotID_idx")
  @@index([featureID], map: "fk_campingSpot_features_featureID_idx")
}

model bookings {
  bookingID            Int                    @id @default(autoincrement())
  userID               Int
  startDate            DateTime               @db.DateTime(0)
  endDate              DateTime               @db.DateTime(0)
  price                Int
  campingSpot_bookings campingSpot_bookings[]

  @@index([userID], map: "fk_bookings_userID_idx")
}

model campingSpots {
  spotID               Int                    @id @default(autoincrement())
  userID               Int                    @default(1)
  name                 String                 @unique(map: "name_UNIQUE") @db.VarChar(45)
  description          String                 @db.LongText
  price                Int
  country              String                 @db.VarChar(45)
  city                 String                 @db.VarChar(45)
  latitude             Decimal                @db.Decimal(10, 6)
  longitude            Decimal                @db.Decimal(10, 6)
  bookable             String                 @default("true") @db.VarChar(45)
  capacity             Int                    @default(3)
  campingSpot_bookings campingSpot_bookings[]
  campingSpot_features campingSpot_features[]
  campingSpot_images   campingSpot_images[]

  @@index([userID], map: "fk_campingSpots_userID_idx")
}

model features {
  featureID   Int    @id @default(autoincrement())
  featureName String @db.VarChar(45)
}

model reviews {
  reviewID  Int     @id @default(autoincrement())
  bookingID Int
  spotID    Int
  rating    Int?
  comment   String? @db.VarChar(45)
}

model users {
  userID     Int      @id @default(autoincrement())
  username   String   @unique(map: "username_UNIQUE") @db.VarChar(16)
  email      String   @unique(map: "email_UNIQUE") @db.VarChar(255)
  password   String   @db.VarChar(255)
  createDate DateTime @db.DateTime(0)
  isAdmin    String   @default("false") @db.VarChar(45)
}

model campingSpot_images {
  imageID      Int          @id @default(autoincrement())
  spotID       Int
  imageURL     String       @db.VarChar(45)
  campingSpots campingSpots @relation(fields: [spotID], references: [spotID], onDelete: NoAction, onUpdate: NoAction, map: "fk_campingSpot_images_spotID")

  @@index([spotID], map: "fk_campingSpot_images_spotID_idx")
}
